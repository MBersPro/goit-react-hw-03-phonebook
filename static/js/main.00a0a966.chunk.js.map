{"version":3,"sources":["components/contactList/ContactList.module.css","components/section/Section.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","ContactForm","state","name","number","onHandleSubmit","e","preventDefault","props","addContact","setState","onHandleChange","target","value","console","log","onSubmit","this","className","form","label","input","type","onChange","pattern","Component","ContactList","contacts","deleteContact","ul","map","item","p","id","onClick","Filter","setFilter","filter","App","JSON","parse","localStorage","getItem","contact","uuidv4","some","toLowerCase","alert","prev","getFilteredContacts","includes","prevProps","prevState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a0a966.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__Es6wX\",\"p\":\"ContactList_p__rhbSx\"};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport {form, label, input} from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    console.log(value);\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.onHandleSubmit} className={form}>\r\n          <label className={label}>\r\n            Name\r\n            <input\r\n              className={input}\r\n              type=\"text\"\r\n              onChange={this.onHandleChange}\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className={input}\r\n              type=\"text\"\r\n              onChange={this.onHandleChange}\r\n              value={this.state.number}\r\n              name=\"number\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={input}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {ul, p} from \"./ContactList.module.css\"\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={ul}>\r\n      {contacts.map((item) => (\r\n        <li key={item.id}>\r\n          <p className={p}>\r\n            {item.name}: {item.number}\r\n          </p>\r\n          <button type=\"button\" id={item.id} onClick={deleteContact}>Delete Contact</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.func.isRequired,\r\n  deleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({setFilter, filter}) => {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            onChange={setFilter}\r\n            value={filter}\r\n        />\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    setFilter: PropTypes.func.isRequired,\r\n    filter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./section/Section\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n            { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n            { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n            { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n            { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n          ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\r\n  }\r\n\r\n  addContact = (contact) => {\r\n    const id = uuidv4();\r\n    if (\r\n      this.state.contacts.some(\r\n        (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      return alert(`${contact.name} is already in contacts.`);\r\n    }\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts, { ...contact, id }],\r\n    }));\r\n  };\r\n\r\n  deleteContact = (e) => {\r\n    const { id } = e.target;\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts.filter((contact) => contact.id !== id)],\r\n    }));\r\n  };\r\n\r\n  getFilteredContacts = () =>\r\n    this.state.contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\r\n    );\r\n\r\n  setFilter = (e) =>\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Phonebook\"}>\r\n          <ContactForm addContact={this.addContact} />\r\n        </Section>\r\n        <Section title={\"Contacts\"}>\r\n          <Filter setFilter={this.setFilter} filter={this.state.filter} />\r\n          <ContactList\r\n            contacts={this.getFilteredContacts()}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <>\n      <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__32pUd\",\"label\":\"ContactForm_label__3heq3\",\"input\":\"ContactForm_input__k3F0g\"};"],"sourceRoot":""}